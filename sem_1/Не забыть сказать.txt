ОПРОС: Кто использовал тех в своей жизни хоть раз?
ОПРОС: Кто эксперт в тех?
ОПРОС: Какую ОС вы используете? 
ОПРОС: А вы пробовали что-то кроме винды?

*  Правильчно читать "Тех" это буквы тау, эпсилон и хи!
*  Сам по себе TeX язык программирования, даже вирусы
* Легенда: Дональд Кнут написал программу TeX для себя,  чтобы готвоить к печати книги серии "Искусство программирования для ЭВМ"

* Достоинство: текст как в книге 
* TeX был написан Кнутом так, что он на любой  операционной системе, которая когда-либо будет существовать будет работать одинаково!

* Чистый Кнутовский TeX не знает сложных команд, это ядро. На него нужна оболочка.
* 1984 год одна из оболочек, LaTeX
* pdf-latex в 2000 году создал Хан Тхе Тхань

7 слайдов

* ворд - на печати получается ровно то, что мы видим на экране. Картинка мышка перетащить. Удобно или траблы.
* LaTeX иначе. Пользователь, команды Tex сам оформляет. Это позволяет думать о содержании.

* пишем файл, команды, волшебная кнопка pdf
* "Хэй, чувак сделай ка мне слово дождь жирным!" и он делает.

* Вся работа - ввод команд, а тех их делает
* страх новичков, я не вижу результат => боль
* чем больше используешь тем удобнее кажется
* я не могу отурыть ворд, он кажется оч неудобным
* про оглавление в ворде, кнопку и гуглинг по ее поиску, 2 версии => 2 разные кнопки 
* LaTeX одинаковый на любом компе
* Итог: не знаю как сделать в tex, гуглю, не знаю в ворд, гуглю. Но в тех я гуглю один раз!

* ОПРОС: Кто боится новых команд и кода и вообще того, что TeX - полноценный язык программирования, поднимите руки!

* Ещё пара команд в техе, их разъяснение
* ОПРОС: Кто всё еще боится? 
* Про конвертацию времени на латех в навыки

* Первый файл последовательно из блокнота.

* Про то как работает TeX, про dvi и т.п.

* Про математику!!!!
* Стоит ли прочитать главу в Львовском? Да. Там показана пара гиковских штук для отпетых типографов. 

* Мотивация 
* Предыстория. Диплом, ворд, 5 человек в техе. Бомбёжка в чате. Я скринил.
* Про Шаблон! Сказать, что достаточно один раз в преамбуле прописать правила оформления таблиц и рисунков и успокоиться. В ворде с каждым рисунком и скаждой таблицей надо работать индивидуально.
* Про простую задачу "Нумерация формул", Нумерация только формул с ссылкой в тексте. ВРУЧНУЮ ИСКАТЬ!
* Про тезис что в ворде всё хорошо у тех, у кого руки растут из того места.


----------------------------------------------------------------------
* Если говорить серьезно, то чем больше документ тем более адской становится работа с ним в ворде. Огромное количество однитипных объектов вроде тех же таблиц и формул, каждый из которых требует индивидуального подхода. А если понадобится переделать все таблицы? Если вы неожиданно не прошли нормоконтоль, редактора из деканата не устроило ваше оформление. А у вас таблиц 30. Вы убьете несколько часов на то, чтобы их переделать. При этом если при этой переделке не пострадают другие части документа, это будет чудо! 

Я не говорю, что тех идеален. Но тем не менее я предпочту искать в течение часа в интернете команду, которая поможет мне сделать все таблицы в документе так, как я хочу, а не переделывать каждую вручную!
-----------------------------------------------------------------------
Итак, почему в TeX никогда ничего не съедет и на всех устройствах ваш файл будет выглядеть одинаково? Как работает TeX? (Нарисовать на доске)

Программа TeX с тем или иным макропакетом читает TeX-файл и преобразует его в файл с расширением .dvi (device independent). Этот файл содержит в себе информацию о том, какие буквы из каких шрифтов и в каком месте страницы надо разместить. В файл записываются только названия и указания, а не очертания документа. 

dvi файл обрабатывается с помощью специальной программы dvi-драйвера, которая подгружает с компьютера, стоящие на нем шрифты. (либо вызывает метафонт, генерирующий их или выдающий ошибку). И генерирует pdf-файл. 

Такое устройство позволяет теху работать одинаково на всех устройствах и операционных системах. 

--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
Последовательное создание документов на паре! 
1) Создаём отдельную папку для нашего документа! 
2) Открываем техмэйкер! 

\documentclass[12pt, a4paper]{article}  

%         Классы: 
% article   ---   статья
% report    ---   отчет
% book      ---   книга
% beamer    ---   презентация

\usepackage{amsmath,amsfonts,amssymb,amsthm,mathtools}  % пакеты для математики

%%%%%%%%%%%%%%%%%%%%%%%% Шрифты %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage{fontspec}         % пакет для подгрузки шрифтов
\setmainfont{Roboto}       % задаёт основной шрифт документа

\usepackage{unicode-math}     % пакет для установки математического шрифта
\setmathfont{Asana Math}      % шрифт для математики

\usepackage{polyglossia}      % Пакет, который позволяет подгружать русские буквы
\setdefaultlanguage{russian}  % Основной язык документа
\setotherlanguage{english}    % Второстепенный язык документа

\begin{document} % тут заканчивается преамбула и начинается документ

% Тут расположен документ!

\end{document}

-----------------------------------------------------------------------------------

Этот документ соберётся. В папке создастся огромная куча каких-то файлов. Объяснить какой файл для чего и как вообще в целом работает вся эта система! 

.tex - мы пишем в этом файле
.pdf - это наш документ
.log - логи, в этом файле находится всё, что происходило при компиляции
.aux - карта документа, в нём записаны все ссылки, номера страниц, таблиц и всего прочьего!
.synctex.gz - позволяет нажать в pdf правую кнопку и перейти к месту, соответствующему ему в tex файле

- запоминать зачем какой файл нужен не обязательно. Чем больше разных примочек и пакетов мы будем использовать, тем больше файлов со странными расширениями будут появляться

------------------------------------------------------------------------------------

Хэй, чувак сделай ка мне слово \textbf{дождь} жирным, а слово \textit{причиной} курсивным!

-----------------------------------------------------------------------

Володя любит          Аню, а Аня любит   кушать мороженое! 

Если случилось так, что один Братан пообещал (навсегда) место на переднем сиденье своей машины одновременно двум своим Братанам, то Второй Пилот определяется следующими способами:

-----------------------------------------------------------------------

% Здесь расположен список того как определяется второй пилот!
% Надо бы добавить ещё пару способов.

\begin{enumerate}
\item забег до машины
\item аукцион; а в случае если поездка превышает 700 км ---
\item бой без правил насмерть.  % этот способ не очень хороший
\end{enumerate}

-------------------------------------------------------------------------------------
СЛАЙД ФОРМУЛЫ В ЛАТЕХ!
-------------------------------------------------------------------------

Кроме того можно определить первого пилота с помощью скоростного интегрирования. Кто первым возьмёт интеграл 

\[ \int_{-\infty}^{+\infty} e^{-x^2} dx \] 

тот и победит. Будет позорно забыть, что это $\sqrt{\pi}$!
-------------------------------------------------------------------------
СЛАЙД С СИМВОЛАМИ!
-------------------------------------------------------------------------

% распознать символ и вставить его

-----------------------------------------------------------------------
СЛАЙД С ОСОБЫМИ СИМВОЛАМИ!
-----------------------------------------------------------------------

Рассказать про особые символы. Попытаться добавить их в файл, показать ошибки. 

-------------------------------------------------------------------------------------

\section{Приветсивие миру}
\section{Команды}

\subsection{Эксперименты!}

\tableofcontents   

Про содержание максимально подробно!

% Элементы структуры:
% part -> chapter -> section -> subsection -> subsubsection -> paragraph -> subparagraph 
% chapter есть в классах book и report
--------------------------------------------------------------





