

- Правильчно читать "Тех" это буквы тау, эпсилон и хи!
- TeX - это созданная американским математиком и программистом Дональдом Кнутом система для верстки текстов с формулами. Сам по себе TeX представляет собой специализированный язык программирования и на нем даже можно писать вирусы. 

У TeX, как и у ворда или каких-то других текстовых систем есть свои особенности, достоинства и недостатки. 

Одним из главных достоинств теха является то, что текс, который вы набрали будет выглядеть совсем как в книге.

-----------------------------------------------------------------

- Как гласит легенда, Дональд Кнут написал программу TeX для себя, чтобы готвоить к печати книги серии "Искусство программирования для ЭВМ". Первая версия TeXа появилась в 1978 году. Программа является абсолютно открытой, и любой человек может взять и использовать в своих программах ее код.

- TeX был написан Кнутом так, что он на любой  операционной системе, которая когда-либо будет существовать будет работать одинаково! 

- Чистый кнутовский тех не знает никаких макросов, шрифтов и спецзнаков. В него встроены только самые примитивные команды. TeX - это что-то вроде ядра. И на это ядро нужна оболочка, владеющая более сложными командами. Одна из таких оболочек была создана в 1984 году Лэсли Лэмпортом и получила название LaTeX. 

-Очень грубая аналогия: R и R-Studio!

На всякий случай: 
-METAFONT — язык программирования, используемый для разработки векторных шрифтов. 
----------------------------------------------

Как я уже сказал у LaTeX есть ряд своих особенностей. И главная из них состоит в том, что латех не WYSIWYG-система, а WYSIWYM-система.

Когда мы работаем в ворде, на печати получается ровно то, что мы видим на экране. Мы можем взять какую-то картинку и мышкой перетащить ее в другой угол экрана, мы можем взять какой-то кусок текста, выделить его мышкой и сменить шрифт. В LaTeX дело обстоит совершенно иначе. Пользователь дает системе какие-то прогерские команды и она сама заботится об оформлении. Это позволяет сосредоточиться на смысле того, что вы пишите. 
-------------------------------------------------

Итак, как же это работает на практике? Мы пишем какой-то текст с различными командами, а после жмем волшебную кнопку, которая собирает нам pdf-файл! 

Например, на слайде с помощью команды \textbf мы говорим теху: "Хэй, чувак сделай ка мне слово дождь жирным!" и он делает. С помощью команды \textit мы просим комп сделать слово причиной курсивным, и он делает. 

Абсолютно вся работа с техом сводится к тому, что мы вводим какие-то команды, а тех их выполняет. 

И поначалу это очень сильно пугает новичков. Все эти команды и тот факт, что мы сразу не видим результат на экране делает для них освоение теха очень болезненным.

Но тем не менее, чем вы больше будете использовать тех и практиковаться в нем, тем более удобным он будет вам казаться. Например, сейчас я не могу со спокойной душой открывать на своем компьютере word или какую-то подобную программу. Мне она кажется жутко неудобной.

Надо было сделать как-то раз оглавление в ворде. Это было жестко. Мы долго искали эту дебильную кнопку. Гуглили как ее найти. При этом в интернете висит одна инструкция и одно место, где находится эта сраная кнопка. На компе установлена другая версия ворда. И это просто забей. В LaTeX на любом компьютере достаточно написать одну команду, чтобы оглавление автоматически сверсталось и само себя однавляло при изменении файла. По сути получается, что когда вы что-то не знаете как сделать в ворде - вы гуглите. Когда вы не знаете как что-то сделать в техе - вы тоже гуглите. И в техе результат будет более устойчивым. О чем я сейчас говорю, вы поймете немного позже. 

Кто боится новых команд и кода и вообще того, что TeX - полноценный язык программирования, поднимите руки!

Окей, давайте посмотрим еще на пару примеров кода в LaTeX! 
-----------------------------------------------

Кто теперь испугался? Руки! Друзья, надо быть смелыми. Конвертируйте свое время в знания. Это будет неплохо окупаться в вашем будущем)

Кратко о каждом пункте.

-------------------------------------------

Итак, пришло время поговорить о том как выглядят теховские файлы в целом и создать наш первый файл.

-------------------------------------------------
Последовательное создание документов на паре! 
1) Создаём отдельную папку для нашего документа! 
2) Открываем техмэйкер! 

\documentclass[12pt, a4paper]{article}

% Тут расположена преамбула! 

\begin{document}

% Тут расположен документ!

\end{document}

-----------------------------------------------------------------------------------

\documentclass[12pt, a4paper]{article}

% В преамбуле находятся различные служебные команды. А именно:
% а) Команды, подключающие пакеты
% б) Команды, которые определяют вид документа в целом
% в) Команды, которые создают новые команды, чтобы удобнее использовать старые команды!
% г) Ещё какие-нибудь другие команды

\usepackage[british,russian]{babel} % выбор языка для документа
\usepackage[utf8]{inputenc} % задание utf8 кодировки исходного tex файла
\usepackage[X2,T2A]{fontenc} % кодировка

\begin{document}

Привет, мир! 

\end{document}

------------------------------------------------------------------------------------

Этот документ соберётся. В папке создастся огромная куча каких-то файлов. Объяснить какой файл для чего и как вообще в целом работает вся эта система! 

.tex - мы пишем в этом файле
.pdf - это наш документ
.log - логи, в этом файле находится всё, что происходило при компиляции
.aux - карта документа, в нём записаны все ссылки, номера страниц, таблиц и всего прочьего!
.synctex.gz - позволяет нажать в pdf правую кнопку и перейти к месту, соответствующему ему в tex файле

- запоминать зачем какой файл нужен не обязательно. Чем больше разных примочек и пакетов мы будем использовать, тем больше файлов со странными расширениями будут появляться

------------------------------------------------------------------------------------

- Написать в дкументе какую-нибудь глупость. Выделить эту глупость жирным цветом, а потом курсивом.
- Поставить много пробелом и много энтеров. Показать, что это ни на что не влияет!
- Показать что такое коментирование и что делает знак %
- Перейти в математический режим и написать формул. 

-------------------------------------------------------------------------------------

\usepackage{amsmath,amsfonts,amssymb,amsthm,mathtools}  %Пакеты для математики!

Володя любит          Аню, а Аня любит   кушать мороженое! 

Если случилось так, что один Братан пообещал (навсегда) место на переднем сиденье своей машины одновременно двум своим Братанам, то Второй Пилот определяется следующими способами:


% Здесь будет расположен список того как определяется второй пилот!
% Надо бы добавить ещё пару способов.

\begin{enumerate}
\item забег до машины
\item аукцион; а в случае если поездка превышает 700 км ---
\item бой без правил насмерть.  % этот способ не очень хороший
\end{enumerate}

Кроме того можно определить первого пилота с помощью скоростного интегрирования. Кто первым возьмёт интеграл 

\[ \int_{-\infty}^{+\infty} e^{-x^2} dx \] 

тот и победит. Будет позорно забыть, что это $\sqrt{\pi}$!

-------------------------------------------------------------------------------------
Вернуться к презентации! Заставить всех прочитать 2 следующих слайда!
--------------------------------------------------------------
В LaTeX можно найти символы на все случаи жизни. Существует достаточно много различных учебных пособий, где приведены команды для написания этих символов, существует гугл, а еще интерактивный поисковик символов. Показать поисковик символов. 
-----------------------------------------------------------------
Рассказать про особые символы. Попытаться добавить их в файл, показать ошибки. 

По ходу написания этого бреда рассказать про:
- перечни, про то что перечни это окружения и латех построен на окружениях.
- про то, что латех - язык программирования, на нем можно писать вирусы!
- текстовый режим и режим для формул (включенные и выключенные формулы) выключной объект - такой объект, которому предназначена отдельная строка
- секции и подсекции
- особые символы 

-------------------------------------------------------------------------------------

Добавить в файл несколько \section и \subsection! Показать как сделать оглавление! \tableofcontents. Показать, что оно появляется только после второй сборки. Показать как оно автоматически обновляется.

--------------------------------------------------------------


- Мотивация изучать LaTeX!
- Все ли поняли шутку, объяснить шутку.

Я в данный момент учусь на 1 курсе магистратуры. В прошлом году мне и моим коллегам довелось защищать диплом. Перед тем как защищать диплом, его надо было написать. И подавляющее большинство (исключение составили 5 человек) писало диплом в ворде. Наш групповой чатик переиодически взрывался от бомбежки людей, а я все это скринил для того, чтобы вставить в эту презентацию!

- Про Шаблон! Сказать, что достаточно один раз в преамбуле прописать правила оформления таблиц и рисунков и успокоиться. В ворде с каждым рисунком и скаждой таблицей надо работать индивидуально.

--------------------------------------------------------------

А если говорить серьезно, то чем больше документ тем более адской становится работа с ним в ворде. Огромное количество однитипных объектов вроде тех же таблиц и формул, каждый из которых требует индивидуального подхода. А если понадобится переделать все таблицы? Если вы неожиданно не прошли нормоконтоль, редактора из деканата не устроило ваше оформление. А у вас таблиц 30. Вы убьете несколько часов на то, чтобы их переделать. При этом если при этой переделке не пострадают другие части документа, это будет чудо! 

Я не говорю, что тех идеален. Но тем не менее я предпочту искать в течение часа в интернете команду, которая поможет мне сделать все таблицы в документе так, как я хочу, а не переделывать каждую вручную!

---------------------------------------------
После мотивации!

Итак, почему в TeX никогда ничего не съедет и на всех устройствах ваш файл будет выглядеть одинаково? Как работает TeX? (Нарисовать на доске)

Программа TeX с тем или иным макропакетом читает TeX-файл и преобразует его в файл с расширением .dvi (device independent). Этот файл содержит в себе информацию о том, какие буквы из каких шрифтов и в каком месте страницы надо разместить. В файл записываются только названия и указания, а не очертания документа. 

dvi файл обрабатывается с помощью специальной программы dvi-драйвера, которая подгружает с компьютера, стоящие на нем шрифты. (либо вызывает метафонт, генерирующий их или выдающий ошибку). И генерирует pdf-файл. 

Такое устройство позволяет теху работать одинаково на всех устройствах и операционных системах. 
---------------------------------------------

Домашка! Показать страничку курса. На следующем занятии мы подробнее займемся формулами и картинками в латех. А на сегодня пожалуй все. :)

